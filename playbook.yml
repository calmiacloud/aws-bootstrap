---
- name: AWS Bootstrap
  hosts: localhost
  gather_facts: no
  collections:
    - amazon.aws
  vars:
    vpc_name:         "{{ project_name }}-{{ project_environment }}-vpc-main-bootstrap"
    sg_test_name:     "{{ project_name }}-{{ project_environment }}-sg-test-bootstrap"
    sg_natgw_name:    "{{ project_name }}-{{ project_environment }}-sg-natgw-bootstrap"
    instance_natgw_name: "{{ project_name }}-{{ project_environment }}-ec2-natgw-bootstrap"
    public_rt_name:   "{{ project_name }}-{{ project_environment }}-rt-public-bootstrap"
    private_rt_name:  "{{ project_name }}-{{ project_environment }}-rt-private-bootstrap"
    nat_rt_name:      "{{ project_name }}-{{ project_environment }}-rt-nat-bootstrap"
    role_name:        "{{ project_name }}-{{ project_environment }}-role-main-bootstrap"
    policy_name:      "{{ project_name }}-{{ project_environment }}-policy-main-bootstrap"
    s3_name:          "{{ project_name }}-{{ project_environment }}-s3-main-bootstrap"
    keypair_name:     "{{ project_name }}-{{ project_environment }}-keypair-main-bootstrap"
    keypair_file:     "{{ lookup('env', 'HOME') }}/{{ project_name }}-{{ project_environment }}-keypair-main-bootstrap.pem"
  tasks:
    - name: Get AWS Account ID (Shell fallback)
      shell: aws sts get-caller-identity --query Account --output text
      register: account_id_result

    - set_fact:
        account_id: "{{ account_id_result.stdout | trim }}"

    - set_fact:
        assume_role_policy: |
          {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Principal": {
                  "Federated": "arn:aws:iam::{{ account_id }}:oidc-provider/token.actions.githubusercontent.com"
                },
                "Action": "sts:AssumeRoleWithWebIdentity",
                "Condition": {
                  "StringLike": {
                    "token.actions.githubusercontent.com:sub": "repo:{{ ghaccount }}/{{ ghrepo }}:*"
                  }
                }
              }
            ]
          }

    - name: Ensure IAM role exists with correct policy
      community.aws.iam_role:
        name: "{{ role_name }}"
        assume_role_policy_document: "{{ assume_role_policy }}"
        state: present
